{"version":3,"sources":["reportWebVitals.js","component/ActionButton/index.js","component/InputSearchBox/index.js","component/GridItem/index.js","component/EmojiGrid/index.js","component/HeaderSearch/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ActionButton","props","className","onClick","emoji","InputSearchBox","value","onChange","GridItem","symbol","EmojiGrid","emojiList","filter","keywords","includes","searchText","map","title","HeaderSearch","useState","text","setText","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"utsKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCGCQ,MARf,SAAsBC,GACpB,OACE,wBAAQC,UAAU,gBAAgBC,QAASF,EAAME,QAAjD,SACGF,EAAMG,S,MCOEC,MAVf,SAAwBJ,GACtB,OACE,uBACEK,MAAOL,EAAMK,MACbJ,UAAU,mBACVK,SAAUN,EAAMM,Y,qBCDPC,MAJf,SAAkBP,GAChB,OAAO,qBAAKC,UAAU,YAAf,SAA4BD,EAAMG,MAAMK,UCalCC,MAZf,SAAmBT,GACjB,OACE,qBAAKC,UAAU,aAAf,SACGS,EACEC,QAAO,SAACR,GAAD,OAAWA,EAAMS,SAASC,SAASb,EAAMc,eAChDC,KAAI,SAACZ,GACJ,OAAO,cAAC,EAAD,CAAWA,MAAOA,GAAYA,EAAMa,aCoDtCC,MAxDf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACE,gCACE,sBAAKnB,UAAU,gBAAf,UACE,cAAC,EAAD,CACEI,MAAOc,EACPb,SAAU,SAACe,GACTD,EAAQC,EAAEC,OAAOjB,UAGrB,cAAC,EAAD,CACEF,MAAM,SACND,QAAS,WACPkB,EAAQ,OAGZ,cAAC,EAAD,CACEjB,MAAM,eACND,QAAS,WACPkB,EAAQ,UAGZ,cAAC,EAAD,CACEjB,MAAM,eACND,QAAS,WACPkB,EAAQ,gBAGZ,cAAC,EAAD,CACEjB,MAAM,eACND,QAAS,WACPkB,EAAQ,WAGZ,cAAC,EAAD,CACEjB,MAAM,eACND,QAAS,WACPkB,EAAQ,YAGZ,cAAC,EAAD,CACEjB,MAAM,eACND,QAAS,WACPkB,EAAQ,eAId,8BACE,cAAC,EAAD,CAAWN,WAAYK,UClD/BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1BrC,M","file":"static/js/main.92a594df.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./styles.css\";\n\nfunction ActionButton(props) {\n  return (\n    <button className=\"action-button\" onClick={props.onClick}>\n      {props.emoji}\n    </button>\n  );\n}\n\nexport default ActionButton;\n","import \"./styles.css\";\n\nfunction InputSearchBox(props) {\n  return (\n    <input\n      value={props.value}\n      className=\"input-search-box\"\n      onChange={props.onChange}\n    ></input>\n  );\n}\n\nexport default InputSearchBox;\n","import \"./styles.css\";\n\nfunction GridItem(props) {\n  return <div className=\"grid-item\">{props.emoji.symbol}</div>;\n}\n\nexport default GridItem;\n","import \"./styles.css\";\nimport emojiList from \"./../../Data/emojiList.json\";\nimport EmojiItem from \"./../GridItem/index\";\n\nfunction EmojiGrid(props) {\n  return (\n    <div className=\"emoji-grid\">\n      {emojiList\n        .filter((emoji) => emoji.keywords.includes(props.searchText))\n        .map((emoji) => {\n          return <EmojiItem emoji={emoji} key={emoji.title} />;\n        })}\n    </div>\n  );\n}\n\nexport default EmojiGrid;\n","import \"./styles.css\";\nimport ActionButton from \"../ActionButton\";\nimport InputSearchBox from \"../InputSearchBox\";\nimport React, { useState } from \"react\";\nimport EmojiGrid from \"../EmojiGrid/index\";\n\nfunction HeaderSearch() {\n  const [text, setText] = useState(\"\");\n\n  return (\n    <div>\n      <div className=\"header-search\">\n        <InputSearchBox\n          value={text}\n          onChange={(e) => {\n            setText(e.target.value);\n          }}\n        />\n        <ActionButton\n          emoji=\"❌\"\n          onClick={() => {\n            setText(\"\");\n          }}\n        />\n        <ActionButton\n          emoji=\"😻\"\n          onClick={() => {\n            setText(\"cat\");\n          }}\n        />\n        <ActionButton\n          emoji=\"🚖\"\n          onClick={() => {\n            setText(\"transport\");\n          }}\n        />\n        <ActionButton\n          emoji=\"🍔\"\n          onClick={() => {\n            setText(\"food\");\n          }}\n        />\n        <ActionButton\n          emoji=\"🍎\"\n          onClick={() => {\n            setText(\"fruit\");\n          }}\n        />\n        <ActionButton\n          emoji=\"💖\"\n          onClick={() => {\n            setText(\"heart\");\n          }}\n        />\n      </div>\n      <div>\n        <EmojiGrid searchText={text} />\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderSearch;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport HeaderSearch from \"./component/HeaderSearch\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HeaderSearch />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}